{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://educorvi.github.io/vue_json_form/schemas/ui.schema.json",
  "title": "UI Schema",
  "description": "Schema for the UI Schema",
  "type": "object",
  "properties": {
    "$schema": {
      "type": "string",
      "description": "The Metaschema of the UI Schema"
    },
    "version": {
      "type": "string",
      "examples": [
        "2.1"
      ],
      "pattern": "^\\d+\\.\\d+$",
      "description": "Version of the UI Schema. Changes in a major version are backwards compatible. So for a parser for version z.x must be compatible with all versions z.y where y is <=x."
    },
    "layout": {
      "title": "Layout",
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$id": "https://educorvi.github.io/vue_json_form/schemas/layout.schema.json",
      "type": "object",
      "description": "The different layouts",
      "properties": {
        "$id": {
          "type": "string",
          "description": "The ID of the layout"
        },
        "$schema": {
          "type": "string",
          "description": "May contain a schema reference to the ui schema"
        },
        "type": {
          "type": "string",
          "enum": [
            "VerticalLayout",
            "HorizontalLayout",
            "Group"
          ]
        },
        "elements": {
          "title": "Elements",
          "description": "The elements of the layout",
          "type": "array",
          "default": [],
          "items": {
            "title": "Layout element",
            "description": "Different types of layout elements",
            "oneOf": [
              {
                "$id": "https://educorvi.github.io/vue_json_form/schemas/control.schema.json",
                "$schema": "http://json-schema.org/draft-07/schema#",
                "type": "object",
                "title": "Control",
                "description": "Contains a form element, e. g. a text input",
                "definitions": {
                  "autocompleteValues": {
                    "type": "string",
                    "description": "Specifies what should be autocompleted by the browser. Possible values are taken from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete#values",
                    "enum": [
                      "off",
                      "on",
                      "name",
                      "honorific-prefix",
                      "given-name",
                      "additional-name",
                      "family-name",
                      "honorific-suffix",
                      "nickname",
                      "email",
                      "username",
                      "new-password",
                      "current-password",
                      "one-time-code",
                      "organization-title",
                      "organization",
                      "street-address",
                      "shipping",
                      "billing",
                      "address-line1",
                      "address-line2",
                      "address-line3",
                      "address-level4",
                      "address-level3",
                      "address-level2",
                      "address-level1",
                      "country",
                      "country-name",
                      "postal-code",
                      "cc-name",
                      "cc-given-name",
                      "cc-additional-name",
                      "cc-family-name",
                      "cc-number",
                      "cc-exp",
                      "cc-exp-month",
                      "cc-exp-year",
                      "cc-csc",
                      "cc-type",
                      "transaction-currency",
                      "transaction-amount",
                      "language",
                      "bday",
                      "bday-day",
                      "bday-month",
                      "bday-year",
                      "sex",
                      "tel",
                      "tel-country-code",
                      "tel-national",
                      "tel-area-code",
                      "tel-local",
                      "tel-extension",
                      "impp",
                      "url",
                      "photo",
                      "webauthn"
                    ]
                  },
                  "controlFormattingOptions": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "label": {
                        "type": "boolean",
                        "description": "Defines whether the fields label is shown",
                        "default": true
                      },
                      "placeholder": {
                        "type": "string",
                        "description": "Will be shown as placeholder in form fields, if supported by field"
                      },
                      "cssClass": {
                        "type": "string",
                        "description": "The Controls CSS classes",
                        "examples": [
                          "bg-primary",
                          "bg-info specialpart"
                        ]
                      },
                      "hidden": {
                        "type": "boolean",
                        "description": "Sets the visibility of the field to hidden. For example useful in combination with a DateTime field with default:\"$now\" to create a hidden timestamp."
                      },
                      "append": {
                        "type": "string",
                        "description": "Will be appended to field"
                      },
                      "prepend": {
                        "type": "string",
                        "description": "Will be prepended to field"
                      },
                      "disabled": {
                        "type": "boolean",
                        "description": "Disables the field",
                        "default": false
                      },
                      "descendantControlOverrides": {
                        "description": "Allows to override UI options and ShowOn for all descendant controls of this control. The key is the scope of the descendant control. Options will be merged.",
                        "title": "Descendant Control Overrides",
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "title": "Descendant Control Override",
                          "properties": {
                            "options": {
                              "$ref": "#/properties/layout/properties/elements/items/oneOf/0/definitions/options"
                            },
                            "showOn": {
                              "$ref": "#/properties/layout/properties/showOn"
                            }
                          },
                          "additionalProperties": false
                        }
                      }
                    }
                  },
                  "tagOptions": {
                    "type": "object",
                    "title": "Tag Options",
                    "additionalProperties": false,
                    "properties": {
                      "tags": {
                        "type": "object",
                        "description": "Will be rendered as tags-Field",
                        "properties": {
                          "enabled": {
                            "type": "boolean",
                            "description": "Set to true to render the field as tags field",
                            "default": false
                          },
                          "pills": {
                            "type": "boolean",
                            "default": false
                          },
                          "variant": {
                            "$schema": "http://json-schema.org/draft-07/schema#",
                            "title": "Color Variant",
                            "description": "Different color variants",
                            "type": "string",
                            "enum": [
                              "primary",
                              "secondary",
                              "success",
                              "warning",
                              "danger",
                              "info",
                              "light",
                              "dark",
                              "outline-primary",
                              "outline-secondary",
                              "outline-success",
                              "outline-warning",
                              "outline-danger",
                              "outline-info",
                              "outline-light",
                              "outline-dark"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "enumOptions": {
                    "title": "Enum Options",
                    "additionalProperties": false,
                    "allOf": [
                      {
                        "title": "Common Enum Options",
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "enumTitles": {
                            "type": "object",
                            "title": "Titles for enum",
                            "description": "If the text in a enums select field is supposed to differ from the keys, they can be specified as properties of this object. The value in the enum must be used as property name",
                            "propertyNames": {
                              "type": "string",
                              "minLength": 1
                            },
                            "patternProperties": {
                              "": {
                                "type": "string",
                                "minLength": 1
                              }
                            }
                          },
                          "stacked": {
                            "type": "boolean",
                            "description": "Radiobutton-/Checkbox group will be stacked if set to true",
                            "default": false
                          },
                          "displayAs": {
                            "type": "string",
                            "title": "Display As",
                            "description": "Choose how an enum should be displayed",
                            "enum": [
                              "select",
                              "radiobuttons",
                              "switches",
                              "buttons"
                            ],
                            "default": "select"
                          },
                          "buttonVariant": {
                            "$schema": "http://json-schema.org/draft-07/schema#",
                            "title": "Color Variant",
                            "description": "Different color variants",
                            "type": "string",
                            "enum": [
                              "primary",
                              "secondary",
                              "success",
                              "warning",
                              "danger",
                              "info",
                              "light",
                              "dark",
                              "outline-primary",
                              "outline-secondary",
                              "outline-success",
                              "outline-warning",
                              "outline-danger",
                              "outline-info",
                              "outline-light",
                              "outline-dark"
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "fileUploadOptions": {
                    "title": "File Upload Options",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "allowMultipleFiles": {
                        "type": "boolean",
                        "description": "Allows the upload of multiple files with fileupload"
                      },
                      "acceptedFileType": {
                        "type": "string",
                        "description": "The accepted File Types",
                        "examples": [
                          "image/*",
                          "image/jpeg, image/png, image/gif",
                          ".jpg, .png, .gif"
                        ]
                      }
                    }
                  },
                  "inputOptions": {
                    "title": "Input Options",
                    "type": "object",
                    "additionalProperties": false,
                    "description": "Options for text fields",
                    "properties": {
                      "format": {
                        "description": "Format for string fields",
                        "type": "string",
                        "enum": [
                          "text",
                          "time",
                          "date",
                          "datetime-local",
                          "email",
                          "password",
                          "search",
                          "url",
                          "tel",
                          "color",
                          "hidden"
                        ],
                        "default": "text"
                      },
                      "multi": {
                        "oneOf": [
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "integer"
                          }
                        ],
                        "default": false,
                        "description": "If set true, textarea will be shown instead of textfield. \n Alternatively can be set to the number of wanted lines"
                      },
                      "autocomplete": {
                        "type": "string",
                        "description": "Specifies what should be autocompleted by the browser. Possible values are taken from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete#values",
                        "enum": [
                          "off",
                          "on",
                          "name",
                          "honorific-prefix",
                          "given-name",
                          "additional-name",
                          "family-name",
                          "honorific-suffix",
                          "nickname",
                          "email",
                          "username",
                          "new-password",
                          "current-password",
                          "one-time-code",
                          "organization-title",
                          "organization",
                          "street-address",
                          "shipping",
                          "billing",
                          "address-line1",
                          "address-line2",
                          "address-line3",
                          "address-level4",
                          "address-level3",
                          "address-level2",
                          "address-level1",
                          "country",
                          "country-name",
                          "postal-code",
                          "cc-name",
                          "cc-given-name",
                          "cc-additional-name",
                          "cc-family-name",
                          "cc-number",
                          "cc-exp",
                          "cc-exp-month",
                          "cc-exp-year",
                          "cc-csc",
                          "cc-type",
                          "transaction-currency",
                          "transaction-amount",
                          "language",
                          "bday",
                          "bday-day",
                          "bday-month",
                          "bday-year",
                          "sex",
                          "tel",
                          "tel-country-code",
                          "tel-national",
                          "tel-area-code",
                          "tel-local",
                          "tel-extension",
                          "impp",
                          "url",
                          "photo",
                          "webauthn"
                        ]
                      },
                      "range": {
                        "type": "boolean",
                        "description": "If set true, a range input will be shown instead of a text input",
                        "default": false
                      },
                      "textAlign": {
                        "type": "string",
                        "description": "Set the text-align of input fields",
                        "enum": [
                          "left",
                          "right",
                          "center",
                          "start",
                          "end"
                        ]
                      }
                    }
                  },
                  "options": {
                    "type": "object",
                    "title": "Options",
                    "description": "Gives multiple options to configure the element",
                    "additionalProperties": false,
                    "allOf": [
                      {
                        "title": "Field Specific Options",
                        "additionalProperties": false,
                        "oneOf": [
                          {
                            "additionalProperties": false,
                            "type": "object",
                            "title": "Tag Options",
                            "properties": {
                              "tags": {
                                "type": "object",
                                "description": "Will be rendered as tags-Field",
                                "properties": {
                                  "enabled": {
                                    "type": "boolean",
                                    "description": "Set to true to render the field as tags field",
                                    "default": false
                                  },
                                  "pills": {
                                    "type": "boolean",
                                    "default": false
                                  },
                                  "variant": {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "title": "Color Variant",
                                    "description": "Different color variants",
                                    "type": "string",
                                    "enum": [
                                      "primary",
                                      "secondary",
                                      "success",
                                      "warning",
                                      "danger",
                                      "info",
                                      "light",
                                      "dark",
                                      "outline-primary",
                                      "outline-secondary",
                                      "outline-success",
                                      "outline-warning",
                                      "outline-danger",
                                      "outline-info",
                                      "outline-light",
                                      "outline-dark"
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          {
                            "additionalProperties": false,
                            "title": "Enum Options",
                            "allOf": [
                              {
                                "title": "Common Enum Options",
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "enumTitles": {
                                    "type": "object",
                                    "title": "Titles for enum",
                                    "description": "If the text in a enums select field is supposed to differ from the keys, they can be specified as properties of this object. The value in the enum must be used as property name",
                                    "propertyNames": {
                                      "type": "string",
                                      "minLength": 1
                                    },
                                    "patternProperties": {
                                      "": {
                                        "type": "string",
                                        "minLength": 1
                                      }
                                    }
                                  },
                                  "stacked": {
                                    "type": "boolean",
                                    "description": "Radiobutton-/Checkbox group will be stacked if set to true",
                                    "default": false
                                  },
                                  "displayAs": {
                                    "type": "string",
                                    "title": "Display As",
                                    "description": "Choose how an enum should be displayed",
                                    "enum": [
                                      "select",
                                      "radiobuttons",
                                      "switches",
                                      "buttons"
                                    ],
                                    "default": "select"
                                  },
                                  "buttonVariant": {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "title": "Color Variant",
                                    "description": "Different color variants",
                                    "type": "string",
                                    "enum": [
                                      "primary",
                                      "secondary",
                                      "success",
                                      "warning",
                                      "danger",
                                      "info",
                                      "light",
                                      "dark",
                                      "outline-primary",
                                      "outline-secondary",
                                      "outline-success",
                                      "outline-warning",
                                      "outline-danger",
                                      "outline-info",
                                      "outline-light",
                                      "outline-dark"
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "additionalProperties": false,
                            "title": "File Upload Options",
                            "type": "object",
                            "properties": {
                              "allowMultipleFiles": {
                                "type": "boolean",
                                "description": "Allows the upload of multiple files with fileupload"
                              },
                              "acceptedFileType": {
                                "type": "string",
                                "description": "The accepted File Types",
                                "examples": [
                                  "image/*",
                                  "image/jpeg, image/png, image/gif",
                                  ".jpg, .png, .gif"
                                ]
                              }
                            }
                          },
                          {
                            "additionalProperties": false,
                            "title": "Input Options",
                            "type": "object",
                            "description": "Options for text fields",
                            "properties": {
                              "format": {
                                "description": "Format for string fields",
                                "type": "string",
                                "enum": [
                                  "text",
                                  "time",
                                  "date",
                                  "datetime-local",
                                  "email",
                                  "password",
                                  "search",
                                  "url",
                                  "tel",
                                  "color",
                                  "hidden"
                                ],
                                "default": "text"
                              },
                              "multi": {
                                "oneOf": [
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "type": "integer"
                                  }
                                ],
                                "default": false,
                                "description": "If set true, textarea will be shown instead of textfield. \n Alternatively can be set to the number of wanted lines"
                              },
                              "autocomplete": {
                                "type": "string",
                                "description": "Specifies what should be autocompleted by the browser. Possible values are taken from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete#values",
                                "enum": [
                                  "off",
                                  "on",
                                  "name",
                                  "honorific-prefix",
                                  "given-name",
                                  "additional-name",
                                  "family-name",
                                  "honorific-suffix",
                                  "nickname",
                                  "email",
                                  "username",
                                  "new-password",
                                  "current-password",
                                  "one-time-code",
                                  "organization-title",
                                  "organization",
                                  "street-address",
                                  "shipping",
                                  "billing",
                                  "address-line1",
                                  "address-line2",
                                  "address-line3",
                                  "address-level4",
                                  "address-level3",
                                  "address-level2",
                                  "address-level1",
                                  "country",
                                  "country-name",
                                  "postal-code",
                                  "cc-name",
                                  "cc-given-name",
                                  "cc-additional-name",
                                  "cc-family-name",
                                  "cc-number",
                                  "cc-exp",
                                  "cc-exp-month",
                                  "cc-exp-year",
                                  "cc-csc",
                                  "cc-type",
                                  "transaction-currency",
                                  "transaction-amount",
                                  "language",
                                  "bday",
                                  "bday-day",
                                  "bday-month",
                                  "bday-year",
                                  "sex",
                                  "tel",
                                  "tel-country-code",
                                  "tel-national",
                                  "tel-area-code",
                                  "tel-local",
                                  "tel-extension",
                                  "impp",
                                  "url",
                                  "photo",
                                  "webauthn"
                                ]
                              },
                              "range": {
                                "type": "boolean",
                                "description": "If set true, a range input will be shown instead of a text input",
                                "default": false
                              },
                              "textAlign": {
                                "type": "string",
                                "description": "Set the text-align of input fields",
                                "enum": [
                                  "left",
                                  "right",
                                  "center",
                                  "start",
                                  "end"
                                ]
                              }
                            }
                          }
                        ]
                      },
                      {
                        "$ref": "#/properties/layout/properties/elements/items/oneOf/0/definitions/controlFormattingOptions",
                        "additionalProperties": false
                      }
                    ]
                  }
                },
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Control"
                    ]
                  },
                  "scope": {
                    "type": "string",
                    "description": "A json pointer referring to the form element in the forms json schema",
                    "format": "json-pointer"
                  },
                  "options": {
                    "$ref": "#/properties/layout/properties/elements/items/oneOf/0/definitions/options"
                  },
                  "showOn": {
                    "$ref": "#/properties/layout/properties/showOn"
                  }
                },
                "examples": [
                  {
                    "type": "Control",
                    "scope": "/properties/objectInJsonSchema"
                  },
                  {
                    "type": "Control",
                    "scope": "/properties/field",
                    "showOn": {
                      "scope": "/properties/referenceField",
                      "type": "EQUALS",
                      "referenceValue": "awesomeValue"
                    },
                    "options": {
                      "label": false,
                      "radiobuttons": true,
                      "stacked": true
                    }
                  }
                ],
                "additionalProperties": false,
                "required": [
                  "type",
                  "scope"
                ]
              },
              {
                "$ref": "#/properties/layout"
              },
              {
                "title": "HTML Renderer",
                "$schema": "http://json-schema.org/draft-07/schema#",
                "$id": "https://educorvi.github.io/vue_json_form/schemas/html.schema.json",
                "type": "object",
                "description": "Some HTML to be rendered in the form",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "HTML"
                    ]
                  },
                  "htmlData": {
                    "type": "string"
                  },
                  "showOn": {
                    "$ref": "#/properties/layout/properties/showOn"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "htmlData"
                ]
              },
              {
                "title": "Divider",
                "$schema": "http://json-schema.org/draft-07/schema#",
                "$id": "https://educorvi.github.io/vue_json_form/schemas/divider.schema.json",
                "type": "object",
                "description": "inserts a simple divider",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Divider"
                    ]
                  },
                  "showOn": {
                    "$ref": "#/properties/layout/properties/showOn"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "type"
                ]
              },
              {
                "$id": "https://educorvi.github.io/vue_json_form/schemas/button.schema.json",
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "Button",
                "description": "Used to put a button into the form",
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Button"
                    ]
                  },
                  "buttonType": {
                    "title": "The Buttons Type",
                    "description": "Submit or Reset",
                    "type": "string",
                    "enum": [
                      "submit",
                      "reset"
                    ]
                  },
                  "text": {
                    "type": "string",
                    "title": "Text",
                    "description": "The buttons text"
                  },
                  "showOn": {
                    "$ref": "#/properties/layout/properties/showOn"
                  },
                  "options": {
                    "type": "object",
                    "title": "Button Options",
                    "description": "Options for the button",
                    "additionalProperties": false,
                    "properties": {
                      "cssClass": {
                        "type": "string",
                        "description": "The layout's CSS classes"
                      },
                      "variant": {
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "title": "Color Variant",
                        "description": "Different color variants",
                        "type": "string",
                        "enum": [
                          "primary",
                          "secondary",
                          "success",
                          "warning",
                          "danger",
                          "info",
                          "light",
                          "dark",
                          "outline-primary",
                          "outline-secondary",
                          "outline-success",
                          "outline-warning",
                          "outline-danger",
                          "outline-info",
                          "outline-light",
                          "outline-dark"
                        ]
                      },
                      "formnovalidate": {
                        "type": "boolean",
                        "description": "Specifies that the form-data should not be validated on submission",
                        "default": false
                      },
                      "submitOptions": {
                        "type": "object",
                        "title": "Submit Options",
                        "description": "Options that are passed to the submit function. This will not change the behaviour of VueJsonForm itself, but can bes used by the application/the webcomponent to change the behaviour of the submit function.",
                        "additionalProperties": true,
                        "properties": {
                          "action": {
                            "type": "string",
                            "description": "Action to perform when the button is clicked",
                            "examples": [
                              "request",
                              "save",
                              "print"
                            ]
                          },
                          "requestUrl": {
                            "type": "string",
                            "description": "The URL to send the request to if `action` is `request`"
                          }
                        }
                      }
                    }
                  }
                },
                "additionalProperties": false,
                "required": [
                  "type",
                  "buttonType",
                  "text"
                ]
              },
              {
                "$id": "https://educorvi.github.io/vue_json_form/schemas/buttongroup.schema.json",
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "Buttongroup",
                "description": "Used to group buttons",
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Buttongroup"
                    ]
                  },
                  "buttons": {
                    "type": "array",
                    "description": "The buttons in the button group",
                    "items": {
                      "$ref": "#/properties/layout/properties/elements/items/oneOf/4"
                    },
                    "minItems": 1
                  },
                  "options": {
                    "type": "object",
                    "properties": {
                      "vertical": {
                        "type": "boolean",
                        "default": false,
                        "description": "Display the buttons vertical"
                      }
                    },
                    "additionalProperties": false
                  },
                  "showOn": {
                    "$ref": "#/properties/layout/properties/showOn"
                  }
                },
                "required": [
                  "buttons",
                  "type"
                ],
                "additionalProperties": false
              }
            ]
          }
        },
        "showOn": {
          "$id": "https://educorvi.github.io/vue_json_form/schemas/show_on.schema.json",
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "ShowOn property",
          "type": "object",
          "description": "Show field depending on value of other field",
          "definitions": {
            "legacyShowOn": {
              "title": "Legacy ShowOn property",
              "type": "object",
              "description": "Legacy Variant of defining ShowOn property",
              "properties": {
                "path": {
                  "type": "string",
                  "description": "The field this field depends on in object notation",
                  "examples": [
                    "files[0].name"
                  ]
                },
                "type": {
                  "type": "string",
                  "description": "Condition to be applied",
                  "title": "ShowOn function type",
                  "enum": [
                    "EQUALS",
                    "NOT_EQUALS",
                    "GREATER",
                    "GREATER_OR_EQUAL",
                    "SMALLER_OR_EQUAL",
                    "SMALLER"
                  ]
                },
                "referenceValue": {
                  "description": "The value the field from scope is compared against",
                  "oneOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    }
                  ]
                }
              },
              "required": [
                "type",
                "path",
                "referenceValue"
              ],
              "additionalProperties": false
            }
          },
          "oneOf": [
            {
              "title": "Legacy ShowOn property",
              "type": "object",
              "description": "Legacy Variant of defining ShowOn property",
              "properties": {
                "path": {
                  "type": "string",
                  "description": "The field this field depends on in object notation",
                  "examples": [
                    "files[0].name"
                  ]
                },
                "type": {
                  "type": "string",
                  "description": "Condition to be applied",
                  "title": "ShowOn function type",
                  "enum": [
                    "EQUALS",
                    "NOT_EQUALS",
                    "GREATER",
                    "GREATER_OR_EQUAL",
                    "SMALLER_OR_EQUAL",
                    "SMALLER"
                  ]
                },
                "referenceValue": {
                  "description": "The value the field from scope is compared against",
                  "oneOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    }
                  ]
                }
              },
              "required": [
                "type",
                "path",
                "referenceValue"
              ],
              "additionalProperties": false
            },
            {
              "description": "Rita Rule\nSee https://educorvi.github.io/rita/rita-core/docs/schema/#/rule",
              "$schema": "https://json-schema.org/draft/2019-09/schema",
              "$id": "https://raw.githubusercontent.com/educorvi/rita/main/rita-core/src/schema/rule.json",
              "title": "Rule",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "comment": {
                  "type": "string",
                  "description": "A comment about what the rule does"
                },
                "rule": {
                  "$schema": "https://json-schema.org/draft/2019-09/schema",
                  "$id": "https://raw.githubusercontent.com/educorvi/rita/main/rita-core/src/schema/formula.json",
                  "title": "Formula",
                  "oneOf": [
                    {
                      "$schema": "https://json-schema.org/draft/2019-09/schema",
                      "$id": "https://raw.githubusercontent.com/educorvi/rita/main/rita-core/src/schema/operator.json",
                      "title": "Operator",
                      "oneOf": [
                        {
                          "title": "Non-Unary operator",
                          "description": "Requires at least two arguments",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "and",
                                "or"
                              ]
                            },
                            "arguments": {
                              "type": "array",
                              "title": "Multiple arguments",
                              "minItems": 2,
                              "items": {
                                "$ref": "#/properties/layout/properties/showOn/oneOf/1/properties/rule"
                              }
                            }
                          },
                          "required": [
                            "arguments",
                            "type"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "title": "Unary operator",
                          "description": "Requires exactly on parameter",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "not"
                              ]
                            },
                            "arguments": {
                              "type": "array",
                              "title": "Unary Arguments",
                              "minItems": 1,
                              "maxItems": 1,
                              "items": {
                                "$ref": "#/properties/layout/properties/showOn/oneOf/1/properties/rule"
                              }
                            }
                          },
                          "required": [
                            "arguments",
                            "type"
                          ],
                          "additionalProperties": false
                        }
                      ]
                    },
                    {
                      "$schema": "https://json-schema.org/draft/2019-09/schema",
                      "title": "Atom",
                      "description": "Describes an atom. Those can be used to read Data",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "atom"
                          ]
                        },
                        "path": {
                          "description": "The path to the atom in the data",
                          "type": "string"
                        },
                        "isDate": {
                          "type": "boolean",
                          "default": false,
                          "description": "Must be set to true if the atom should be parsed as a date"
                        },
                        "default": {
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "boolean"
                            },
                            {
                              "type": "string",
                              "format": "date-time"
                            },
                            {
                              "type": "array"
                            }
                          ]
                        }
                      },
                      "required": [
                        "type",
                        "path"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "$schema": "https://json-schema.org/draft/2019-09/schema",
                      "$id": "https://raw.githubusercontent.com/educorvi/rita/main/rita-core/src/schema/plugin.json",
                      "title": "Plugin",
                      "description": "Describes an plugin",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "plugin"
                          ]
                        },
                        "name": {
                          "description": "The plugins name",
                          "type": "string"
                        },
                        "formula": {
                          "$ref": "#/properties/layout/properties/showOn/oneOf/1/properties/rule"
                        },
                        "options": {
                          "description": "The plugins options",
                          "type": "object"
                        }
                      },
                      "required": [
                        "type",
                        "name",
                        "formula"
                      ],
                      "additionalProperties": false,
                      "examples": [
                        {
                          "type": "plugin",
                          "name": "http",
                          "options": {
                            "url": "https://example.com/api"
                          },
                          "formula": {
                            "type": "atom",
                            "path": "keyInResponse"
                          }
                        }
                      ]
                    },
                    {
                      "$schema": "https://json-schema.org/draft/2019-09/schema",
                      "$id": "https://raw.githubusercontent.com/educorvi/rita/main/rita-core/src/schema/comparison.json",
                      "description": "Compare strings, dates or numbers with each other",
                      "title": "Comparison",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "comparison"
                          ]
                        },
                        "operation": {
                          "description": "Selects how the arguments should be compared",
                          "type": "string",
                          "enum": [
                            "greater",
                            "smaller",
                            "greaterOrEqual",
                            "smallerOrEqual",
                            "equal"
                          ]
                        },
                        "dates": {
                          "description": "Indicates if dates are compared",
                          "type": "boolean",
                          "default": false
                        },
                        "allowDifferentTypes": {
                          "description": "Indicates if different types are allowed inside a comparison. This follows the JavaScript rules for comparison (´===´ is used for ´equals´).",
                          "type": "boolean",
                          "default": false
                        },
                        "arguments": {
                          "type": "array",
                          "minItems": 2,
                          "maxItems": 2,
                          "items": {
                            "oneOf": [
                              {
                                "$schema": "https://json-schema.org/draft/2019-09/schema",
                                "title": "Atom",
                                "description": "Describes an atom. Those can be used to read Data",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "atom"
                                    ]
                                  },
                                  "path": {
                                    "description": "The path to the atom in the data",
                                    "type": "string"
                                  },
                                  "isDate": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "Must be set to true if the atom should be parsed as a date"
                                  },
                                  "default": {
                                    "oneOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "boolean"
                                      },
                                      {
                                        "type": "string",
                                        "format": "date-time"
                                      },
                                      {
                                        "type": "array"
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "type",
                                  "path"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "$schema": "https://json-schema.org/draft/2019-09/schema",
                                "title": "Macro",
                                "description": "Describes macros. Available macros are `now` and `length`",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "macro"
                                    ]
                                  },
                                  "macro": {
                                    "oneOf": [
                                      {
                                        "title": "now",
                                        "description": "Returns the current time",
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "now"
                                            ]
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      {
                                        "title": "length",
                                        "description": "Returns the length of an array",
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "length"
                                            ]
                                          },
                                          "array": {
                                            "$schema": "https://json-schema.org/draft/2019-09/schema",
                                            "title": "Atom",
                                            "description": "Describes an atom. Those can be used to read Data",
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "atom"
                                                ]
                                              },
                                              "path": {
                                                "description": "The path to the atom in the data",
                                                "type": "string"
                                              },
                                              "isDate": {
                                                "type": "boolean",
                                                "default": false,
                                                "description": "Must be set to true if the atom should be parsed as a date"
                                              },
                                              "default": {
                                                "oneOf": [
                                                  {
                                                    "type": "string"
                                                  },
                                                  {
                                                    "type": "number"
                                                  },
                                                  {
                                                    "type": "boolean"
                                                  },
                                                  {
                                                    "type": "string",
                                                    "format": "date-time"
                                                  },
                                                  {
                                                    "type": "array"
                                                  }
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "path"
                                            ],
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "type",
                                  "macro"
                                ],
                                "additionalProperties": false,
                                "examples": [
                                  {
                                    "type": "macro",
                                    "macro": {
                                      "type": "now"
                                    }
                                  },
                                  {
                                    "type": "macro",
                                    "macro": {
                                      "type": "length",
                                      "array": {
                                        "type": "atom",
                                        "path": "customers"
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "type": "number"
                              },
                              {
                                "type": "string",
                                "format": "date-time"
                              },
                              {
                                "type": "string"
                              },
                              {
                                "$schema": "https://json-schema.org/draft/2019-09/schema",
                                "$id": "https://raw.githubusercontent.com/educorvi/rita/main/rita-core/src/schema/calculation.json",
                                "title": "Calculation",
                                "description": "Calculates a result",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "calculation"
                                    ]
                                  },
                                  "operation": {
                                    "description": "The mathematical operation to be calculated. Modulo refers to the function mod(a,b)=a-(floor(a/b)*b)",
                                    "type": "string",
                                    "enum": [
                                      "add",
                                      "subtract",
                                      "multiply",
                                      "divide",
                                      "modulo"
                                    ]
                                  },
                                  "arguments": {
                                    "type": "array",
                                    "minItems": 2,
                                    "items": {
                                      "oneOf": [
                                        {
                                          "$schema": "https://json-schema.org/draft/2019-09/schema",
                                          "title": "Atom",
                                          "description": "Describes an atom. Those can be used to read Data",
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "atom"
                                              ]
                                            },
                                            "path": {
                                              "description": "The path to the atom in the data",
                                              "type": "string"
                                            },
                                            "isDate": {
                                              "type": "boolean",
                                              "default": false,
                                              "description": "Must be set to true if the atom should be parsed as a date"
                                            },
                                            "default": {
                                              "oneOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "type": "number"
                                                },
                                                {
                                                  "type": "boolean"
                                                },
                                                {
                                                  "type": "string",
                                                  "format": "date-time"
                                                },
                                                {
                                                  "type": "array"
                                                }
                                              ]
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "path"
                                          ],
                                          "additionalProperties": false
                                        },
                                        {
                                          "$schema": "https://json-schema.org/draft/2019-09/schema",
                                          "title": "Macro",
                                          "description": "Describes macros. Available macros are `now` and `length`",
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "macro"
                                              ]
                                            },
                                            "macro": {
                                              "oneOf": [
                                                {
                                                  "title": "now",
                                                  "description": "Returns the current time",
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "now"
                                                      ]
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                {
                                                  "title": "length",
                                                  "description": "Returns the length of an array",
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "length"
                                                      ]
                                                    },
                                                    "array": {
                                                      "$schema": "https://json-schema.org/draft/2019-09/schema",
                                                      "title": "Atom",
                                                      "description": "Describes an atom. Those can be used to read Data",
                                                      "type": "object",
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "enum": [
                                                            "atom"
                                                          ]
                                                        },
                                                        "path": {
                                                          "description": "The path to the atom in the data",
                                                          "type": "string"
                                                        },
                                                        "isDate": {
                                                          "type": "boolean",
                                                          "default": false,
                                                          "description": "Must be set to true if the atom should be parsed as a date"
                                                        },
                                                        "default": {
                                                          "oneOf": [
                                                            {
                                                              "type": "string"
                                                            },
                                                            {
                                                              "type": "number"
                                                            },
                                                            {
                                                              "type": "boolean"
                                                            },
                                                            {
                                                              "type": "string",
                                                              "format": "date-time"
                                                            },
                                                            {
                                                              "type": "array"
                                                            }
                                                          ]
                                                        }
                                                      },
                                                      "required": [
                                                        "type",
                                                        "path"
                                                      ],
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                }
                                              ]
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "macro"
                                          ],
                                          "additionalProperties": false,
                                          "examples": [
                                            {
                                              "type": "macro",
                                              "macro": {
                                                "type": "now"
                                              }
                                            },
                                            {
                                              "type": "macro",
                                              "macro": {
                                                "type": "length",
                                                "array": {
                                                  "type": "atom",
                                                  "path": "customers"
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "type": "number"
                                        },
                                        {
                                          "$ref": "#/properties/layout/properties/showOn/oneOf/1/properties/rule/oneOf/3/properties/arguments/items/oneOf/5"
                                        },
                                        {
                                          "$ref": "#/properties/layout/properties/showOn/oneOf/1/properties/rule/oneOf/3/properties/arguments/items/oneOf/6"
                                        }
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "operation",
                                  "arguments",
                                  "type"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "$schema": "https://json-schema.org/draft/2019-09/schema",
                                "$id": "https://raw.githubusercontent.com/educorvi/rita/main/rita-core/src/schema/dateCalculation.json",
                                "title": "Date Calculation",
                                "description": "Calculations involving dates",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "dateCalculation"
                                    ]
                                  },
                                  "operation": {
                                    "description": "Add/subtract a time interval to/from a date or subtract two dates to get the interval between them",
                                    "type": "string",
                                    "enum": [
                                      "add",
                                      "subtract"
                                    ]
                                  },
                                  "arguments": {
                                    "type": "array",
                                    "minItems": 2,
                                    "maxItems": 2,
                                    "items": {
                                      "oneOf": [
                                        {
                                          "$schema": "https://json-schema.org/draft/2019-09/schema",
                                          "title": "Atom",
                                          "description": "Describes an atom. Those can be used to read Data",
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "atom"
                                              ]
                                            },
                                            "path": {
                                              "description": "The path to the atom in the data",
                                              "type": "string"
                                            },
                                            "isDate": {
                                              "type": "boolean",
                                              "default": false,
                                              "description": "Must be set to true if the atom should be parsed as a date"
                                            },
                                            "default": {
                                              "oneOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "type": "number"
                                                },
                                                {
                                                  "type": "boolean"
                                                },
                                                {
                                                  "type": "string",
                                                  "format": "date-time"
                                                },
                                                {
                                                  "type": "array"
                                                }
                                              ]
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "path"
                                          ],
                                          "additionalProperties": false
                                        },
                                        {
                                          "$schema": "https://json-schema.org/draft/2019-09/schema",
                                          "title": "Macro",
                                          "description": "Describes macros. Available macros are `now` and `length`",
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "macro"
                                              ]
                                            },
                                            "macro": {
                                              "oneOf": [
                                                {
                                                  "title": "now",
                                                  "description": "Returns the current time",
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "now"
                                                      ]
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                {
                                                  "title": "length",
                                                  "description": "Returns the length of an array",
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "length"
                                                      ]
                                                    },
                                                    "array": {
                                                      "$schema": "https://json-schema.org/draft/2019-09/schema",
                                                      "title": "Atom",
                                                      "description": "Describes an atom. Those can be used to read Data",
                                                      "type": "object",
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "enum": [
                                                            "atom"
                                                          ]
                                                        },
                                                        "path": {
                                                          "description": "The path to the atom in the data",
                                                          "type": "string"
                                                        },
                                                        "isDate": {
                                                          "type": "boolean",
                                                          "default": false,
                                                          "description": "Must be set to true if the atom should be parsed as a date"
                                                        },
                                                        "default": {
                                                          "oneOf": [
                                                            {
                                                              "type": "string"
                                                            },
                                                            {
                                                              "type": "number"
                                                            },
                                                            {
                                                              "type": "boolean"
                                                            },
                                                            {
                                                              "type": "string",
                                                              "format": "date-time"
                                                            },
                                                            {
                                                              "type": "array"
                                                            }
                                                          ]
                                                        }
                                                      },
                                                      "required": [
                                                        "type",
                                                        "path"
                                                      ],
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                }
                                              ]
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "macro"
                                          ],
                                          "additionalProperties": false,
                                          "examples": [
                                            {
                                              "type": "macro",
                                              "macro": {
                                                "type": "now"
                                              }
                                            },
                                            {
                                              "type": "macro",
                                              "macro": {
                                                "type": "length",
                                                "array": {
                                                  "type": "atom",
                                                  "path": "customers"
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "type": "number"
                                        },
                                        {
                                          "type": "string",
                                          "format": "date-time"
                                        },
                                        {
                                          "$ref": "#/properties/layout/properties/showOn/oneOf/1/properties/rule/oneOf/3/properties/arguments/items/oneOf/5"
                                        },
                                        {
                                          "$ref": "#/properties/layout/properties/showOn/oneOf/1/properties/rule/oneOf/3/properties/arguments/items/oneOf/6"
                                        }
                                      ]
                                    }
                                  },
                                  "dateCalculationUnit": {
                                    "description": "What unit time intervals given as arguments will be in.",
                                    "type": "string",
                                    "enum": [
                                      "seconds",
                                      "minutes",
                                      "hours",
                                      "days",
                                      "months",
                                      "years"
                                    ],
                                    "default": "seconds"
                                  },
                                  "dateResultUnit": {
                                    "description": "What unit time intervals representing the result will be in.",
                                    "type": "string",
                                    "enum": [
                                      "seconds",
                                      "minutes",
                                      "hours",
                                      "days",
                                      "months",
                                      "years"
                                    ],
                                    "default": "seconds"
                                  }
                                },
                                "required": [
                                  "operation",
                                  "arguments",
                                  "type"
                                ],
                                "additionalProperties": false
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "type",
                        "operation",
                        "arguments"
                      ],
                      "additionalProperties": false,
                      "examples": [
                        {
                          "comment": "This evaluates to \"5>2\"",
                          "type": "comparison",
                          "operation": "greater",
                          "arguments": [
                            5,
                            2
                          ]
                        },
                        {
                          "comment": "Check two Strings for equality",
                          "type": "comparison",
                          "operation": "equal",
                          "arguments": [
                            "test",
                            "test1"
                          ]
                        }
                      ]
                    },
                    {
                      "$schema": "https://json-schema.org/draft/2019-09/schema",
                      "$id": "https://raw.githubusercontent.com/educorvi/rita/main/rita-core/src/schema/quantifier.json",
                      "title": "Quantifier",
                      "type": "object",
                      "description": "Quantifiers that can be used to evaluate rules on arrays in Data",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "forall",
                            "exists"
                          ]
                        },
                        "array": {
                          "title": "Data array",
                          "description": "This can either be an Atom that references an array in the data, or an array of rules",
                          "oneOf": [
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/properties/layout/properties/showOn/oneOf/1/properties/rule"
                              }
                            },
                            {
                              "$schema": "https://json-schema.org/draft/2019-09/schema",
                              "title": "Atom",
                              "description": "Describes an atom. Those can be used to read Data",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "atom"
                                  ]
                                },
                                "path": {
                                  "description": "The path to the atom in the data",
                                  "type": "string"
                                },
                                "isDate": {
                                  "type": "boolean",
                                  "default": false,
                                  "description": "Must be set to true if the atom should be parsed as a date"
                                },
                                "default": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    },
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "type": "string",
                                      "format": "date-time"
                                    },
                                    {
                                      "type": "array"
                                    }
                                  ]
                                }
                              },
                              "required": [
                                "type",
                                "path"
                              ],
                              "additionalProperties": false
                            }
                          ]
                        },
                        "placeholder": {
                          "description": "This is a placeholder name for the current array object. This is the property name with wich you can reference the current value in the subsequent rule",
                          "type": "string",
                          "minLength": 1
                        },
                        "indexPlaceholder": {
                          "description": "This is a placeholder name for the current index of the array object. This is the property name with wich you can reference the current index in the subsequent rule",
                          "type": "string",
                          "minLength": 1,
                          "default": "index"
                        },
                        "rule": {
                          "$ref": "#/properties/layout/properties/showOn/oneOf/1/properties/rule"
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "type",
                        "array",
                        "placeholder",
                        "rule"
                      ],
                      "examples": [
                        {
                          "type": "forall",
                          "array": {
                            "type": "atom",
                            "path": "arrayOfIntValues"
                          },
                          "placeholder": "forallItem",
                          "rule": {
                            "type": "comparison",
                            "operation": "greater",
                            "arguments": [
                              5,
                              {
                                "type": "atom",
                                "path": "forallItem"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              "required": [
                "id",
                "rule"
              ],
              "examples": [
                {
                  "id": "rule1",
                  "rule": {
                    "type": "and",
                    "arguments": [
                      {
                        "type": "atom",
                        "path": "member"
                      },
                      {
                        "type": "not",
                        "arguments": [
                          {
                            "type": "atom",
                            "path": "employee"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        "options": {
          "description": "Additional options",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "cssClass": {
              "type": "string",
              "description": "The layout's CSS classes",
              "examples": [
                "bg-primary",
                "bg-info headerpart"
              ]
            },
            "label": {
              "type": "string",
              "description": "Adds a label for groups (only for type=Group)"
            }
          }
        }
      },
      "examples": [
        {
          "type": "VerticalLayout",
          "elements": []
        },
        {
          "type": "Group",
          "elements": [],
          "options": {
            "label": "This is a group"
          }
        }
      ],
      "additionalProperties": false,
      "required": [
        "type",
        "elements"
      ]
    }
  },
  "required": [
    "version",
    "layout"
  ],
  "additionalProperties": false
}